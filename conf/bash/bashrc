# .:!:. >SED-UPDATE .:!:.

## Set initialization file for Vim.
if grep -qE '^vim' "$EVANGELIST/.update-list"
then
  export MYVIMRC="$XDG_CONFIG_HOME/nvim/init.vim"
  export VIMINIT=":source $MYVIMRC"
fi

## Separate plugin imports from all the rest.
if grep -qE '^n?vim' "$EVANGELIST/.update-list"
then
  ## operands within [[]] are treated as strings.
  if [[ -f $EVANGELIST/custom/custom.vim ]]; then
    cd "$EVANGELIST/custom" \
      && sed -n '/^Plug .*/p' custom.vim > .plugins.vim \
      && sed '/^Plug .*/d' custom.vim > .settings.vim \
      && cd - > /dev/null
  fi
fi

## Finish configuring locales.
## NOTE: the necessity of the second condition in 'if-statement'
##       should be tested by time.
if [[ -z $LANG ]] && which locale-gen &> /dev/null
then
  if locale -a | grep -qi 'en_us.utf8'
  then
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8
    export LANGUAGE=en_US.UTF-8
  else
    echo "No utf8 locales found. See 'locale-gen'."
  fi
fi

if which nvim &> /dev/null
then
  VISUAL=nvim
elif which vim &> /dev/null
then
  VISUAL=vim
fi

export VISUAL
export EDITOR=$VISUAL


## Standard bash settings
### No need to export these variables, since
### - unlikely you will use them in your scripts
### - a different shell (spawned as child process)
###   will use its own history settings
HISTSIZE=10000
HISTFILESIZE=20000
HISTFILE=~/.bash_history

## ignoredups  - don't put immediate duplicates in the history list.
## ignorespace - don't append to the history list cmds that start with a space.
## erasedups   - don't store dups in the history list completely.
## ignoreboth  = ignoredups + ignorespace
HISTCONTROL=ignorespace:erasedups
## Don't store easy and frequently used commands
HISTIGNORE="v:d:l:G:cd:ll:ls:lt:pwd:tmux:clear:gg*:md*:type*:which*"

## Append to the history file, don't overwrite it.
shopt -s histappend

## Add entries to $HISTFILE immediately if running ssh.
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  if [[ -z "$PROMPT_COMMAND" ]]; then
    PROMPT_COMMAND="history -a"
  else
    PROMPT_COMMAND="history -a;$PROMPT_COMMAND"
  fi
else
  ## erasedups prevents adding dups encountered during a single bash session.
  ## Still, cmds run across several sessions may duplicate each other
  ## in the HISTFILE. So, the correct history merge is needed:
  _historymerge () {
      history -n; history -w; history -c; history -r
  }
  trap _historymerge EXIT
fi

## Check the window size after each command and, if necessary,
## Update the values of LINES and COLUMNS.
shopt -s checkwinsize

## Export "default" color settings
type dircolors &> /dev/null && eval "$(dircolors -b)"

## Better grep colors
### set the color of 'file name' section in grep's output
### fn=33 (default is 35); 33 is more visible on a white background of
### transparent dark terminal window.
export GREP_COLORS='ms=01;31:mc=01;31:sl=:cx=:fn=33:ln=32:bn=32:se=36'


## Some bash specific aliases
alias ls='ls --color=auto'
alias _bashrc='vim ~/.bashrc'
alias bashrc="vim $EVANGELIST/custom/custom.bash"

## Add visited dirs to the dir stack (doesn't work on macOS).
[[ $(uname) != Darwin ]] && alias cd=_autopushd

_autopushd () {
  local INDIR
  case $1 in
    '') INDIR=~ ;;
    -)  INDIR=${OLDPWD:-~} ;;
    *)  INDIR=$1 ;;
  esac

  local CNT=0
  local ifs_bak=$IFS
  IFS=$'\n'

  for DIR in $(dirs -p)
  do
    ## `dirs -p` prints dir stack with one entry per line.
    ## `dirs -l` prints longer listing substituting tilde with the home dir.
    ## the latter option seems more suitable in for-loop but we can't use it
    ## with dir names containing a space. Instead, we go with `dirs -p`,
    ## change IFS (with a backup), and substitute tilde manually.

    DIR=${DIR//'~'/$HOME}
    INDIR=${INDIR//'~'/$HOME}
    [[ $(readlink -f $DIR) = $(readlink -f $INDIR) ]] && break
    (( CNT++ ))
  done
  IFS=$ifs_bak

  if [[ $CNT -lt $(dirs -p | wc -l) ]]; then
    pushd +$CNT > /dev/null
    return
  fi

  pushd "$INDIR" > /dev/null
}

## Enforce the use of Neovim.
if which nvim &> /dev/null
then
  alias vim=nvim
  alias vimdiff='nvim -d'
fi

## Static imports
### Import more aliases.
source "$EVANGELIST/conf/bash/aliases-functions.sh"
### evangelist completions for bash
source "$EVANGELIST/_impl/completions/evn-compl.bash"

## Misc
### Increase key repeat rate with xset if it is available.
### Ignore "unable to open display" error that appears in docker.
which xset &> /dev/null && xset r rate 250 70 2> /dev/null

# .:!:. <SED-UPDATE .:!:.
